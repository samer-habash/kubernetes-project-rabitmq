# Default values for rabbitmq-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

serviceAccount:
  create: true
  annotations: {}
  name:

ingress:
  enabled: false
  annotations: {}
  hosts:
    host: chart-rabbitmq.local
    paths: []
  tls: []

rabbitmq:
  enabled: true
  replicaCount: 1

  image:
    repository: rabbitmq:3-management
    pullPolicy: IfNotPresent
    restartPolicy: Always

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}

  service:
    # the name of service is crucial, and will be automatically used when producer/consumer run the python with -s flag (-s rabbitmq)
    # the service name is the dns name that will be let producer/consumer connect to as explained in above line
    name: rabbitmq
    type: ClusterIP
    APIportname: api-svcport
    APIport: 5672
    APItargetPort: 5672
    APIportprotocol: TCP

    GUIportname: gui-svcport
    GUIport: 15672
    GUItargetPort: 15672
    GUIportprotocl: TCP

  ports:
    containerPortAPIname: rabbit-apiport
    containerPortAPI: 5672
    containerPortGUIname: rabbit-guiport
    containerPortGUI: 15672

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}


producer:
  enabled: true
  replicaCount: 1

  image:
    repository: samer1984/standalone-producer:latest
    pullPolicy: IfNotPresent
    restartPolicy: Always

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  env:
    name: message_count
    value: "500"

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}


consumer:
  enabled: true
  replicaCount: 1

  image:
    repository: samer1984/standalone-consumer:latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

